/// <reference types="node" />
import { Readable } from "stream";
import type VideoFilters from "../../interface/VideoFilters";
type VideoFormat = "mp4" | "avi" | "mov";
interface ListVideoHighestOC {
    stream?: boolean;
    verbose?: boolean;
    folderName?: string;
    playlistUrls: string[];
    outputFormat?: VideoFormat;
    filter?: keyof VideoFilters;
}
type ResultConfig = {
    status: number;
} | {
    message: string;
    status: number;
} | {
    stream: Readable;
    filename: string;
};
export type ListVideoHighestType = ResultConfig;
export default function ListVideoHighest({ filter, stream, verbose, folderName, playlistUrls, outputFormat, }: ListVideoHighestOC): Promise<ListVideoHighestType[]>;
export {};
//# sourceMappingURL=ListVideoHighest.d.ts.map
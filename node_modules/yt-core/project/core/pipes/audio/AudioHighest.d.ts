/// <reference types="node" />
import { Readable } from "stream";
import type AudioFilters from "../../interface/AudioFilters";
type AudioFormat = "mp3" | "ogg" | "flac" | "aiff";
interface AudioHighestOC {
    query: string;
    stream?: boolean;
    verbose?: boolean;
    folderName?: string;
    outputFormat?: AudioFormat;
    filter?: keyof AudioFilters;
}
type ResultConfig = {
    status: number;
} | {
    message: string;
    status: number;
} | {
    stream: Readable;
    filename: string;
};
export type AudioHighestType = ResultConfig;
export default function AudioHighest({ query, filter, stream, verbose, folderName, outputFormat, }: AudioHighestOC): Promise<ResultConfig>;
export {};
//# sourceMappingURL=AudioHighest.d.ts.map
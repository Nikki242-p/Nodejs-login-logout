/// <reference types="node" />
import { Readable } from "stream";
import type AudioFilters from "../../interface/AudioFilters";
type AudioFormat = "mp3" | "ogg" | "flac" | "aiff";
type AudioQualities = "high" | "medium" | "low" | "ultralow";
interface AudioQualityCustomOC {
    query: string;
    stream?: boolean;
    folderName?: string;
    quality: AudioQualities;
    outputFormat?: AudioFormat;
    filter?: keyof AudioFilters;
}
type ResultConfig = {
    status: number;
} | {
    message: string;
    status: number;
} | {
    stream: Readable;
    filename: string;
};
export type AudioQualityCustomType = ResultConfig;
export default function AudioQualityCustom({ query, filter, quality, stream, folderName, outputFormat, }: AudioQualityCustomOC): Promise<ResultConfig>;
export {};
//# sourceMappingURL=AudioQualityCustom.d.ts.map
/// <reference types="node" />
import { Readable } from "stream";
import type AudioFilters from "../../interface/AudioFilters";
type AudioFormat = "mp3" | "ogg" | "flac" | "aiff";
interface ListAudioLowestOC {
    stream?: boolean;
    verbose?: boolean;
    folderName?: string;
    playlistUrls: string[];
    outputFormat?: AudioFormat;
    filter?: keyof AudioFilters;
}
type ResultConfig = {
    status: number;
} | {
    message: string;
    status: number;
} | {
    stream: Readable;
    filename: string;
};
export type ListAudioLowestType = ResultConfig;
export default function ListAudioLowest({ filter, stream, verbose, folderName, playlistUrls, outputFormat, }: ListAudioLowestOC): Promise<ListAudioLowestType[]>;
export {};
//# sourceMappingURL=ListAudioLowest.d.ts.map